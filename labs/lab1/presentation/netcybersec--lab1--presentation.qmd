---
## Author
author:
    - Александрова У.В.,
    - Волгин И.А,
    - Голощапов Я.В.,
    - Дворкина Е.В.,
    - Серегина И.А.
## Title
title: Лабораторная работа №1-С «ЗАЩИТА НАУЧНО-ТЕХНИЧЕСКОЙ ИНФОРМАЦИИ ПРЕДПРИЯТИЯ»
subtitle: "Кибербезопасность предприятия"
license: CC BY
date: today
date-format: "YYYY-MM-DD" # Example: 2025-09-06
---

## Cостав команды

Александрова Ульяна Вадимовна

Волгин Иван Алексеевич

Голощапов Ярослав Вячеславович

Дворкина Ева Владимировна

Серёгина Ирина Андреевна

Чемоданова Ангелина Александровна


## Цели и задачи

Освоить практических навыков выявления, анализа и устранения уязвимостей информационных систем в рамках сценария «Защита научно-технической информации предприятия».

Обнаружить, проанализировать и закрыть уязвимости:

  Слабый пароль пользователя;

 - XSS (CVE-2019-17427);

 - Blind SQL (CVE-2019-18890).


Определить и устранить последствия эксплуатации уязвимостей:

 - Developer backdoor (последствие уязвимости 1);

 - Redmine User (последствие уязвимости 2).

Разработать и применить меры по устранению выявленных уязвимостей.

# Выполнение лабораторной работы

## Обнаружение уязвимостей

:::::::::::::: {.columns align=center}
::: {.column width="50%"}

Уязвимости и последствия будут детектироваться с помощью ViPNet IDS NS.

:::
::: {.column width="30%"}

![Установка фильтров](image/12.png){#fig-012 width=50%}

:::
::::::::::::::

## Обнаружение уязвимости "Слабый пароль пользователя"

Сканирование системы и множество одинаковых событий со стороны 10.10.4.11 на 10.10.2.12.

Событие класса "successful-admin": пользователь успешно вошел в систему, подобрав пароль.

Действия между узлами 10.10.4.11, 10.10.2.12, 10.10.4.13: был скомпрометирован пароль от компьютера Developer Workstation.

![Обнаружение входа в систему](image/101.jpg){#fig-101 width=50%}

## Карточка инцидента

Уязвимость - слабый пароль пользователя. Рекомендации по устранению - изменить пароль на более сложный

![Карточка инцидента](image/15.png){#fig-015 width=50%}

## Обнаружение последствия "Developer backdoor"

Создание исполняемого файла на файловом сервере 10.10.2.12 и обращения к нему

![Детектирование создания неизвестного файла](image/13.png){#fig-013 width=50%}

## Обнаружение последствия "Developer backdoor"

Событие класса trojan-activity (LaZagne), указывающее на часть атаки, запускающую программу для извлечения информации из браузера.

![Обнаружение файла с backdoor](image/14.png){#fig-014 width=50%}

## Карточка инцидента

Первичные рекомендации по устранению последствия - удаление исполняемого файла с backdoor и остановка его работы.

![Карточка инцидента](image/16.png){#fig-016 width=50%}

## Обнаружение уязвимости "XSS (CVE-2019-17427)"

Cобытия с источником - 10.10.4.11, получателем - 10.10.2.15 (сервер Redmine). События AM EXPLOIN Possible Redmine XSS и событие AM EXPLOIT Generic Possible XSS in HTTP Body: они говорят о том, что эксплуатируется уязвимость Redmine, существующая в версиях до 4.0.4, позволяющая внедрять вредоносный JavaScript-код в веб-страницы, просматриваемые другими пользователями .

![Обнаружение эксплуатации уязвимости](image/17.png){#fig-017 width=50%}

## Обнаружение уязвимости "XSS (CVE-2019-17427)"

На сервере Redmine в файле production.log увидим сильно отличающиеся от остальных этапы, говорящие о внедрении JS кода.

![Обнаружение эксплуатации уязвимости через логи](image/104.jpg){#fig-104 width=50%}

## Карточка инцидента

Составляем карточку уязвимости, общее описание и рекомендации можно найти на сайте AMTIP.

![Карточка уязвимости](image/18.png){#fig-018 width=50%}

## Обнаружение последствия "Redmine User"

В проекте DEV1 во вкладке wiki включен REST API

![Обнаружение REST API](image/103.jpg){#fig-103 width=50%}

## Обнаружение последствия "Redmine User"

В коде упоминается пользователь с именем hacker, его мы обнаружим и в списках пользователей.

Код мы видели в пакете события.

![Упоминание пользователя в коде](image/20.png){#fig-020 width=50%}

## Обнаружение последствия "Redmine User"

![Подозрительный пользователь с правами администратора](image/21.png){#fig-021 width=50%}

## Карточка инцидента

Заполняем карточку инцидента, в рекомендациях удаление нового пользователя.

![Карточка инцидента](image/22.png){#fig-022 width=50%}


## Обнаружение уязвимости "Blind SQL (CVE-2019-18890)"

Большое количество SQL запросов `SELECT SLEEP` и `SELECT FROM` от сервера 10.10.4.11 на сервер 10.10.2.15

![SQL-запросы](image/105.jpg){#fig-105 width=50%}

## Карточка инцидента

При заполнении карточки уязвимости ссылаемся на гитхаб.

![Карточка инцидента](image/107.jpg){#fig-107 width=50%}

## Устранение уязвимостей и их последствий: Уязвимость Слабый пароль пользователя DEV-1

Для закрытия уязвимости меняем пароль на более сложный, не содержащийся в словаре. На сервер MS Active Directory подключаемся  через удаленный рабочий стол. Открываем «Active Directory Users and Computers», переходим в users, находим dev1.

![Пользователь dev1](image/1.png){#fig-001 width=50%}

## Устранение уязвимостей и их последствий: Уязвимость Слабый пароль пользователя DEV-1

Меняем пароль пользователя

![Смена пароля](image/2.png){#fig-002 width=50%}

## Последствие "Developer backdoor"

Через удаленный рабочий стол переходим на сервер Developer (10.10.4.13).
Новая задача, записанная нарушителем, находится на узле Developer 1  в планировщике задач.

![Запуск исполняемого файла в планировщике](image/108.jpg){#fig-108 width=50%}

## Последствие "Developer backdoor"

![Запуск исполняемого файла в планировщике](image/3.png){#fig-003 width=50%}

## Последствие "Developer backdoor"

Удаляем задачу в планировщике, и теперь надо удалить файл. Во вкладке action мы обнаружили путь к файлу `C:\Users\dev1\Downloads\svchosting.exe`, благодаря этому нашли его и удалили.

![Путь к исполняемому файлу](image/109.jpg){#fig-109 width=50%}

## Уязвимость атака XSS

В Redmine до версии 4.0.4 постоянный XSS существует из-за ошибок форматирования при работе с textile текстом. В данном сценарии используется для включения REST API для эксплуатации следующей уязвимости.

![Пример добавления кода, выводящего на экран надпись XSS в wiki-страницу](image/4.png){#fig-004 width=50%}

## Уязвимость атака XSS

Из описания уязвимости понятно, что необходимо найти библиотеку для преобразования textile разметки в html. В Redmine за данное преобразование отвечает файл redcloth3.rb. Для устранения изменим в нем следующие строки

![Содержимое файла redcloth3.rb](image/5.png){#fig-005 width=50%}

## Уязвимость атака XSS

Строки после изменения:

![Исправления в файле redcloth3.rb](image/6.png){#fig-006 width=50%}

## Уязвимость атака XSS

Перезапускаем службу веб-сервера `sudo systemctl restart nginx.service`. Уязвимость успешно устранена, так как изменилось отображение страницы на Redmine Wiki.

![Успешное устранение уязвимости](image/7.png){#fig-007 width=50%}

## Последствие "Redmine User"

Нарушитель создал пользователя на портале Redmine. Для обнаружения добавления нового привилегированного пользователя заходим в консоль администратора Redmine, переходим в раздел «Administration» – «Users» и смотрим список существующих пользователей. Удаляем его.

![Список пользователей Redmine](image/8.png){#fig-008  width=50%}

## Уязвимость Blind SQL-инъекция

Эксплуатируемая уязвимость – CVE-2019-18890.

В Redmine до версии 3.2.9 и 3.3.x до версии 3.3.10 уязвимость позволяет пользователям Redmine получать доступ к защищенной информации с помощью сгенерированного объектного запроса. Уязвимость реализуется посимвольным перебором с замером времени ответа. Время прихода пакета является индикатором: при запоздании пакета – символ подобран верно, иначе – перебор продолжается

![SQL-запрос](image/106.jpg){#fig-106  width=50%}

## Уязвимость Blind SQL-инъекция

Вносим изменения в код, добавляя фильтрацию значений, и после перезапуска веб-сервера через команду `sudo systemctl restart nginx.service` уязвимость устраняется.

![Содержимое файла query.rb до исправления уязвимости](image/10.png){#fig-010  width=50%}

## Уязвимость Blind SQL-инъекция

Исправленный файл:

![Содержимое файла query.rb с исправлением уязвимости](image/11.png){#fig-011  width=50%}

## Результат

Закрыли все обнаруженные инциденты,

Устранили уязвимости и последствия

![Устраненные уязвимости и последствия](image/111.jpg){#fig-111  width=50%}

## Выводы

В ходе выполнения лабораторной работы были успешно достигнуты поставленные цели: освоены практические навыки выявления, анализа и устранения типовых уязвимостей информационной системы. В рамках сценария «Защита научно-технической информации предприятия» были обнаружены и закрыты критические уязвимости и их последствия эксплуатации.
